{% set name = "zope.proxy" %}
{% set version = "7.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name|replace(".", "_") }}-{{ version }}.tar.gz
  sha256: 19cddee4b376ae9791fd6ddb491e861e3a7317a97b49a946b2e3c3f78254564c

build:
  number: 0
  skip: True  # [py<39]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv

requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    - python
    - setuptools
    - zope.interface

test:
  imports:
    - zope.proxy
  requires:
    - pip
    - pytest
  commands:
    - pip check
    - pytest --pyargs zope.proxy

about:
  home: https://github.com/zopefoundation/zope.proxy
  license: ZPL-2.1
  license_family: OTHER
  license_file: LICENSE.txt
  summary: special objects which serve as mostly-transparent wrappers around another object
  description: |
    Proxies are special objects which serve as mostly-transparent wrappers
    around another object, intervening in the apparent behavior of the wrapped
    bject only when necessary to apply the policy (e.g., access checking,
    location brokering, etc.) for which the proxy is responsible.
    zope.proxy is implemented via a C extension module, which lets it do things
    like lie about its own __class__ that are difficult in pure Python (and
    were completely impossible before metaclasses). It also proxies all the
    internal slots (such as __int__/__str__/__add__).
  doc_url: https://zopeproxy.readthedocs.io
  dev_url: https://github.com/zopefoundation/zope.proxy

extra:
  recipe-maintainers:
    - ChrisBarker-NOAA
    - daf
